
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    resolver 8.8.8.8;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    include internal_conf/*backend.conf;
    include config/*/*backend.conf;
    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
	lua_package_path '/usr/local/openresty/nginx/conf/config/?.lua;/usr/local/openresty/nginx/conf/?.lua;/usr/local/openresty/nginx/conf/src/?.lua;/usr/local/openresty/lualib/?.lua;/usr/local/openresty/nginx/conf/thirty_lib/?.lua;;';
	#lua_package_path "$prefix/?.luac;$prefix/?.lua;;";
    init_by_lua_file conf/config/init.lua; #初始化lua全局变量
    #gzip  on;

    server {
        listen       80;
        server_name  localhost;
        #include config/*/*backend.conf;
        include config/*/*location.conf;
        include config/*/*server.conf;
        #include       *server.conf;
		#include       php_server_conf/*server.conf;
        #include       php_conf/*location.conf;
        #include       device_conf/*location.conf;
        #include       user_conf/*location.conf;
        #include       internal_conf/*location.conf;
        #include       data_conf/*location.conf;
        #include       data_service_conf/*location.conf;
        #include       db_operation_conf/*location.conf;
        #include       consumer_conf/*location.conf;
        #include       db_proxsy_conf/*location.conf;
        location = /data{
            proxy_pass http://127.0.0.1:4004;
        }

        location = /app{
            proxy_pass http://127.0.0.1:4001;
        }

        location = /gocron{
            proxy_pass http://127.0.0.1:5920;
        }

		location = /ping{
            access_log off;
            log_subrequest off;
            if ($request_method != GET ) {
                return 405;
            }
            content_by_lua 'ngx.exit(ngx.HTTP_OK)';
        }
               
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }




}
